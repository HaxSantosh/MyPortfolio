import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { FaLinkedin, FaEnvelope, FaPhone, FaMapMarkerAlt } from 'react-icons/fa';
import { useSelector } from 'react-redux';
import { selectDarkMode } from '../features/theme/themeSlice';
import { personalInfo } from '../data/personalInfo';

const Contact = () => {
  const darkMode = useSelector(selectDarkMode);
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState(null);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simulate form submission
    setTimeout(() => {
      setSubmitStatus('success');
      setIsSubmitting(false);
      setFormData({ name: '', email: '', message: '' });
    }, 1500);
  };

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-b from-white to-gray-50 dark:from-black/10 dark:to-black/10"
    >
      <div className="max-w-7xl mx-auto terminal-card">
        <div className="terminal-header">
          <span className="terminal-title">COMMUNICATION.PORTAL</span>
          <span className="text-gray-400 dark:text-hacker-primary/70">STATUS: ONLINE</span>
        </div>
        
        <div className="text-center">
          <h2 className="text-3xl font-bold text-gray-900 dark:text-hacker-primary">
            Get in Touch
          </h2>
          <p className="mt-4 text-lg text-gray-600 dark:text-hacker-primary/90">
            <span className="dark:text-hacker-secondary dark:font-mono dark:mr-2">{">"}</span>
            I'd love to hear from you! Let's discuss how we can work together.
          </p>
        </div>

        <div className="mt-16 grid grid-cols-1 md:grid-cols-2 gap-10">
          {/* Contact Information */}
          <div className="space-y-8">
            <div className={`p-6 rounded-lg ${
              darkMode ? 'bg-gray-800' : 'bg-white'
            } shadow-lg`}>
              <h3 className={`text-xl font-semibold mb-6 ${
                darkMode ? 'text-white' : 'text-gray-900'
              }`}>
                Contact Information
              </h3>
              <div className="space-y-4">
                <div className="flex items-center">
                  <FaPhone className={`w-6 h-6 ${
                    darkMode ? 'text-indigo-400' : 'text-indigo-600'
                  }`} />
                  <a
                    href={`tel:${personalInfo.phone}`}
                    className={`ml-3 ${
                      darkMode ? 'text-gray-300 hover:text-indigo-400' : 'text-gray-600 hover:text-indigo-600'
                    }`}
                    aria-label="Phone number"
                  >
                    {personalInfo.phone}
                  </a>
                </div>
                <div className="flex items-center">
                  <FaEnvelope className={`w-6 h-6 ${
                    darkMode ? 'text-indigo-400' : 'text-indigo-600'
                  }`} />
                  <a
                    href={`mailto:${personalInfo.email}`}
                    className={`ml-3 ${
                      darkMode ? 'text-gray-300 hover:text-indigo-400' : 'text-gray-600 hover:text-indigo-600'
                    }`}
                    aria-label="Email address"
                  >
                    {personalInfo.email}
                  </a>
                </div>
                <div className="flex items-center">
                  <FaMapMarkerAlt className={`w-6 h-6 ${
                    darkMode ? 'text-indigo-400' : 'text-indigo-600'
                  }`} />
                  <span className={`ml-3 ${
                    darkMode ? 'text-gray-300' : 'text-gray-600'
                  }`}>
                    {personalInfo.location}
                  </span>
                </div>
                <div className="flex items-center">
                  <FaLinkedin className={`w-6 h-6 ${
                    darkMode ? 'text-indigo-400' : 'text-indigo-600'
                  }`} />
                  <a
                    href={personalInfo.linkedin}
                    target="_blank"
                    rel="noopener noreferrer"
                    className={`ml-3 ${
                      darkMode ? 'text-gray-300 hover:text-indigo-400' : 'text-gray-600 hover:text-indigo-600'
                    }`}
                    aria-label="LinkedIn profile"
                  >
                    LinkedIn Profile
                  </a>
                </div>
              </div>
            </div>
          </div>

          {/* Contact Form */}
          <div className={`p-6 rounded-lg ${
            darkMode ? 'bg-gray-800' : 'bg-white'
          } shadow-lg`}>
            <form onSubmit={handleSubmit} className="space-y-6">
              <div>
                <label
                  htmlFor="name"
                  className={`block text-sm font-medium ${
                    darkMode ? 'text-gray-300' : 'text-gray-700'
                  }`}
                >
                  Name
                </label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  required
                  value={formData.name}
                  onChange={handleChange}
                  className={`mt-1 block w-full rounded-md shadow-sm ${
                    darkMode 
                      ? 'bg-gray-700 border-gray-600 text-white' 
                      : 'border-gray-300 text-gray-900'
                  } focus:ring-indigo-500 focus:border-indigo-500`}
                />
              </div>
              <div>
                <label
                  htmlFor="email"
                  className={`block text-sm font-medium ${
                    darkMode ? 'text-gray-300' : 'text-gray-700'
                  }`}
                >
                  Email
                </label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  required
                  value={formData.email}
                  onChange={handleChange}
                  className={`mt-1 block w-full rounded-md shadow-sm ${
                    darkMode 
                      ? 'bg-gray-700 border-gray-600 text-white' 
                      : 'border-gray-300 text-gray-900'
                  } focus:ring-indigo-500 focus:border-indigo-500`}
                />
              </div>
              <div>
                <label
                  htmlFor="message"
                  className={`block text-sm font-medium ${
                    darkMode ? 'text-gray-300' : 'text-gray-700'
                  }`}
                >
                  Message
                </label>
                <textarea
                  id="message"
                  name="message"
                  rows={4}
                  required
                  value={formData.message}
                  onChange={handleChange}
                  className={`mt-1 block w-full rounded-md shadow-sm ${
                    darkMode 
                      ? 'bg-gray-700 border-gray-600 text-white' 
                      : 'border-gray-300 text-gray-900'
                  } focus:ring-indigo-500 focus:border-indigo-500`}
                />
              </div>
              <button
                type="submit"
                disabled={isSubmitting}
                className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${
                  isSubmitting
                    ? 'bg-gray-400'
                    : 'bg-indigo-600 hover:bg-indigo-700'
                } focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500`}
                aria-label={isSubmitting ? 'Submitting form...' : 'Submit form'}
              >
                {isSubmitting ? 'Sending...' : 'Send Message'}
              </button>
              {submitStatus === 'success' && (
                <p className={`mt-2 text-sm ${
                  darkMode ? 'text-green-400' : 'text-green-600'
                }`}>
                  Message sent successfully!
                </p>
              )}
            </form>
          </div>
        </div>
      </div>
    </motion.div>
  );
};

export default Contact;